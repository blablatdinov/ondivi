django/db/models/sql/query.py:1:1: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:60:5: ANN202 Missing return type annotation for private function `get_field_names_from_opts`
django/db/models/sql/query.py:60:31: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:66:10: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:70:5: ANN202 Missing return type annotation for private function `get_paths_from_expression`
django/db/models/sql/query.py:70:31: ANN001 Missing type annotation for function argument `expr`
django/db/models/sql/query.py:81:5: ANN202 Missing return type annotation for private function `get_children_from_q`
django/db/models/sql/query.py:81:25: ANN001 Missing type annotation for function argument `q`
django/db/models/sql/query.py:94:5: ANN202 Missing return type annotation for private function `get_child_with_renamed_prefix`
django/db/models/sql/query.py:94:35: ANN001 Missing type annotation for function argument `prefix`
django/db/models/sql/query.py:94:43: ANN001 Missing type annotation for function argument `replacement`
django/db/models/sql/query.py:94:56: ANN001 Missing type annotation for function argument `child`
django/db/models/sql/query.py:116:9: TRY004 Prefer `TypeError` exception for invalid type
django/db/models/sql/query.py:116:15: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:117:13: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:117:77: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:125:14: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:130:5: ANN202 Missing return type annotation for private function `rename_prefix_from_q`
django/db/models/sql/query.py:130:26: ANN001 Missing type annotation for function argument `prefix`
django/db/models/sql/query.py:130:34: ANN001 Missing type annotation for function argument `replacement`
django/db/models/sql/query.py:130:47: ANN001 Missing type annotation for function argument `q`
django/db/models/sql/query.py:138:12: PYI024 Use `typing.NamedTuple` instead of `collections.namedtuple`
django/db/models/sql/query.py:147:9: ANN204 Missing return type annotation for special method `__init__`
django/db/models/sql/query.py:147:9: D107 Missing docstring in `__init__`
django/db/models/sql/query.py:147:24: ANN001 Missing type annotation for function argument `sql`
django/db/models/sql/query.py:147:29: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:147:36: ANN001 Missing type annotation for function argument `params`
django/db/models/sql/query.py:159:9: ANN201 Missing return type annotation for public function `chain`
django/db/models/sql/query.py:159:9: D102 Missing docstring in public method
django/db/models/sql/query.py:159:21: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:162:9: ANN201 Missing return type annotation for public function `clone`
django/db/models/sql/query.py:162:9: D102 Missing docstring in public method
django/db/models/sql/query.py:162:21: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:165:9: ANN201 Missing return type annotation for public function `get_columns`
django/db/models/sql/query.py:165:9: D102 Missing docstring in public method
django/db/models/sql/query.py:171:9: ANN204 Missing return type annotation for special method `__iter__`
django/db/models/sql/query.py:171:9: D105 Missing docstring in magic method
django/db/models/sql/query.py:183:9: ANN204 Missing return type annotation for special method `__repr__`
django/db/models/sql/query.py:183:9: D105 Missing docstring in magic method
django/db/models/sql/query.py:184:16: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:187:9: ANN201 Missing return type annotation for public function `params_type`
django/db/models/sql/query.py:187:9: D102 Missing docstring in public method
django/db/models/sql/query.py:192:9: ANN204 Missing return type annotation for special method `__str__`
django/db/models/sql/query.py:192:9: D105 Missing docstring in magic method
django/db/models/sql/query.py:197:9: ANN202 Missing return type annotation for private function `_execute_query`
django/db/models/sql/query.py:211:32: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:217:15: PYI024 Use `typing.NamedTuple` instead of `collections.namedtuple`
django/db/models/sql/query.py:293:9: ANN204 Missing return type annotation for special method `__init__`
django/db/models/sql/query.py:293:9: D107 Missing docstring in `__init__`
django/db/models/sql/query.py:293:24: ANN001 Missing type annotation for function argument `model`
django/db/models/sql/query.py:293:31: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:293:31: ANN001 Missing type annotation for function argument `alias_cols`
django/db/models/sql/query.py:322:9: ANN201 Missing return type annotation for public function `output_field`
django/db/models/sql/query.py:322:9: D102 Missing docstring in public method
django/db/models/sql/query.py:323:9: RET503 Missing explicit `return` at the end of function able to return non-`None` value
django/db/models/sql/query.py:326:9: RET505 Unnecessary `elif` after `return` statement
django/db/models/sql/query.py:330:9: ANN201 Missing return type annotation for public function `base_table`
django/db/models/sql/query.py:330:9: D102 Missing docstring in public method
django/db/models/sql/query.py:331:9: RET503 Missing explicit `return` at the end of function able to return non-`None` value
django/db/models/sql/query.py:334:9: ANN204 Missing return type annotation for special method `__str__`
django/db/models/sql/query.py:335:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:335:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:345:9: ANN201 Missing return type annotation for public function `sql_with_params`
django/db/models/sql/query.py:346:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:346:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:352:9: ANN204 Missing return type annotation for special method `__deepcopy__`
django/db/models/sql/query.py:352:28: ANN001 Missing type annotation for function argument `memo`
django/db/models/sql/query.py:358:9: ANN201 Missing return type annotation for public function `get_compiler`
django/db/models/sql/query.py:358:9: D102 Missing docstring in public method
django/db/models/sql/query.py:358:28: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:358:40: ANN001 Missing type annotation for function argument `connection`
django/db/models/sql/query.py:358:57: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:358:57: ANN001 Missing type annotation for function argument `elide_empty`
django/db/models/sql/query.py:360:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:360:30: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:364:49: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:367:9: ANN201 Missing return type annotation for public function `get_meta`
django/db/models/sql/query.py:368:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:368:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:373:9: RET503 Missing explicit `return` at the end of function able to return non-`None` value
django/db/models/sql/query.py:374:20: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:376:9: ANN201 Missing return type annotation for public function `clone`
django/db/models/sql/query.py:377:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:377:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:396:67: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:403:9: SLF001 Private member accessed: `_annotation_select_cache`
django/db/models/sql/query.py:408:13: SLF001 Private member accessed: `_extra_select_cache`
django/db/models/sql/query.py:416:9: SLF001 Private member accessed: `_filtered_relations`
django/db/models/sql/query.py:421:9: ANN201 Missing return type annotation for public function `chain`
django/db/models/sql/query.py:421:21: ANN001 Missing type annotation for function argument `klass`
django/db/models/sql/query.py:422:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:422:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:433:13: SLF001 Private member accessed: `_setup_query`
django/db/models/sql/query.py:436:9: ANN201 Missing return type annotation for public function `relabeled_clone`
django/db/models/sql/query.py:436:9: D102 Missing docstring in public method
django/db/models/sql/query.py:436:31: ANN001 Missing type annotation for function argument `change_map`
django/db/models/sql/query.py:441:9: ANN202 Missing return type annotation for private function `_get_col`
django/db/models/sql/query.py:441:24: ANN001 Missing type annotation for function argument `target`
django/db/models/sql/query.py:441:32: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:441:39: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:446:9: C901 `get_aggregation` is too complex (19 > 10)
django/db/models/sql/query.py:446:9: PLR0912 Too many branches (21 > 12)
django/db/models/sql/query.py:446:9: PLR0915 Too many statements (79 > 50)
django/db/models/sql/query.py:446:9: ANN201 Missing return type annotation for public function `get_aggregation`
django/db/models/sql/query.py:446:31: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:446:38: ANN001 Missing type annotation for function argument `aggregate_exprs`
django/db/models/sql/query.py:447:9: D200 One-line docstring should fit on one line
django/db/models/sql/query.py:447:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:461:67: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:464:33: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:534:25: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:572:33: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:583:21: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:626:9: ANN201 Missing return type annotation for public function `get_count`
django/db/models/sql/query.py:626:25: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:627:9: D200 One-line docstring should fit on one line
django/db/models/sql/query.py:627:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:633:9: ANN201 Missing return type annotation for public function `has_filters`
django/db/models/sql/query.py:633:9: D102 Missing docstring in public method
django/db/models/sql/query.py:636:9: ANN201 Missing return type annotation for public function `exists`
django/db/models/sql/query.py:636:9: D102 Missing docstring in public method
django/db/models/sql/query.py:636:22: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:636:22: ANN001 Missing type annotation for function argument `limit`
django/db/models/sql/query.py:641:41: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:641:76: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:641:81: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:658:9: ANN201 Missing return type annotation for public function `has_results`
django/db/models/sql/query.py:658:9: D102 Missing docstring in public method
django/db/models/sql/query.py:658:27: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:663:9: ANN201 Missing return type annotation for public function `explain`
django/db/models/sql/query.py:663:9: D102 Missing docstring in public method
django/db/models/sql/query.py:663:23: ANN001 Missing type annotation for function argument `using`
django/db/models/sql/query.py:663:30: A002 Argument `format` is shadowing a Python builtin
django/db/models/sql/query.py:663:30: ANN001 Missing type annotation for function argument `format`
django/db/models/sql/query.py:663:43: ANN003 Missing type annotation for `**options`
django/db/models/sql/query.py:670:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:670:34: EM102 Exception must not use an f-string literal, assign to variable first
django/db/models/sql/query.py:675:9: C901 `combine` is too complex (15 > 10)
django/db/models/sql/query.py:675:9: PLR0912 Too many branches (15 > 12)
django/db/models/sql/query.py:675:9: PLR0915 Too many statements (53 > 50)
django/db/models/sql/query.py:675:9: ANN201 Missing return type annotation for public function `combine`
django/db/models/sql/query.py:675:23: ANN001 Missing type annotation for function argument `rhs`
django/db/models/sql/query.py:675:28: ANN001 Missing type annotation for function argument `connector`
django/db/models/sql/query.py:676:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:676:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:685:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:685:29: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:687:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:687:29: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:689:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:689:29: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:691:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:691:29: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:720:51: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:767:9: SIM102 Use a single `if` statement instead of nested `if` statements
django/db/models/sql/query.py:772:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:773:21: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:774:55: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:791:9: ANN202 Missing return type annotation for private function `_get_defer_select_mask`
django/db/models/sql/query.py:791:38: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:791:44: ANN001 Missing type annotation for function argument `mask`
django/db/models/sql/query.py:791:50: ANN001 Missing type annotation for function argument `select_mask`
django/db/models/sql/query.py:817:33: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:819:21: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:819:71: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:827:33: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:829:21: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:829:71: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:835:9: ANN202 Missing return type annotation for private function `_get_only_select_mask`
django/db/models/sql/query.py:835:37: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:835:43: ANN001 Missing type annotation for function argument `mask`
django/db/models/sql/query.py:835:49: ANN001 Missing type annotation for function argument `select_mask`
django/db/models/sql/query.py:846:33: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:848:21: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:848:71: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:852:9: ANN201 Missing return type annotation for public function `get_select_mask`
django/db/models/sql/query.py:853:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:853:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:874:9: ANN201 Missing return type annotation for public function `table_alias`
django/db/models/sql/query.py:874:27: ANN001 Missing type annotation for function argument `table_name`
django/db/models/sql/query.py:874:39: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:874:39: ANN001 Missing type annotation for function argument `create`
django/db/models/sql/query.py:874:53: ANN001 Missing type annotation for function argument `filtered_relation`
django/db/models/sql/query.py:875:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:875:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:901:9: ANN201 Missing return type annotation for public function `ref_alias`
django/db/models/sql/query.py:901:25: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:905:9: ANN201 Missing return type annotation for public function `unref_alias`
django/db/models/sql/query.py:905:27: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:905:34: ANN001 Missing type annotation for function argument `amount`
django/db/models/sql/query.py:909:9: ANN201 Missing return type annotation for public function `promote_joins`
django/db/models/sql/query.py:909:29: ANN001 Missing type annotation for function argument `aliases`
django/db/models/sql/query.py:910:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:910:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:929:13: S101 Use of `assert` detected
django/db/models/sql/query.py:946:9: ANN201 Missing return type annotation for public function `demote_joins`
django/db/models/sql/query.py:946:28: ANN001 Missing type annotation for function argument `aliases`
django/db/models/sql/query.py:947:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:965:9: ANN201 Missing return type annotation for public function `reset_refcounts`
django/db/models/sql/query.py:965:31: ANN001 Missing type annotation for function argument `to_counts`
django/db/models/sql/query.py:966:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:966:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:974:9: ANN201 Missing return type annotation for public function `change_aliases`
django/db/models/sql/query.py:974:30: ANN001 Missing type annotation for function argument `change_map`
django/db/models/sql/query.py:975:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:975:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:985:9: S101 Use of `assert` detected
django/db/models/sql/query.py:992:75: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1015:9: RET503 Missing explicit `return` at the end of function able to return non-`None` value
django/db/models/sql/query.py:1021:9: ANN201 Missing return type annotation for public function `bump_prefix`
django/db/models/sql/query.py:1021:27: ANN001 Missing type annotation for function argument `other_query`
django/db/models/sql/query.py:1021:40: ANN001 Missing type annotation for function argument `exclude`
django/db/models/sql/query.py:1022:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1022:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1029:13: ANN202 Missing return type annotation for private function `prefix_gen`
django/db/models/sql/query.py:1030:13: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1030:13: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1061:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1062:21: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1062:77: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1073:14: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1076:9: ANN201 Missing return type annotation for public function `get_initial_alias`
django/db/models/sql/query.py:1077:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1077:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1090:9: ANN201 Missing return type annotation for public function `count_active_tables`
django/db/models/sql/query.py:1091:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1091:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1098:9: ANN201 Missing return type annotation for public function `join`
django/db/models/sql/query.py:1098:20: ANN001 Missing type annotation for function argument `join`
django/db/models/sql/query.py:1098:26: ANN001 Missing type annotation for function argument `reuse`
django/db/models/sql/query.py:1099:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1099:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1128:83: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1144:42: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1152:9: ANN201 Missing return type annotation for public function `join_parent_model`
django/db/models/sql/query.py:1152:33: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:1152:39: ANN001 Missing type annotation for function argument `model`
django/db/models/sql/query.py:1152:46: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1152:53: ANN001 Missing type annotation for function argument `seen`
django/db/models/sql/query.py:1153:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1153:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1169:29: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1177:29: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1181:25: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1185:9: ANN201 Missing return type annotation for public function `check_alias`
django/db/models/sql/query.py:1185:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1185:27: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1187:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1188:17: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1189:47: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1192:9: ANN201 Missing return type annotation for public function `add_annotation`
django/db/models/sql/query.py:1192:30: ANN001 Missing type annotation for function argument `annotation`
django/db/models/sql/query.py:1192:42: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1192:49: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1192:49: ANN001 Missing type annotation for function argument `select`
django/db/models/sql/query.py:1204:9: ANN201 Missing return type annotation for public function `resolve_expression`
django/db/models/sql/query.py:1204:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1204:34: ANN001 Missing type annotation for function argument `query`
django/db/models/sql/query.py:1204:41: ANN002 Missing type annotation for `*args`
django/db/models/sql/query.py:1204:48: ANN003 Missing type annotation for `**kwargs`
django/db/models/sql/query.py:1216:18: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1227:21: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1233:9: ANN201 Missing return type annotation for public function `get_external_cols`
django/db/models/sql/query.py:1233:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1241:9: ANN201 Missing return type annotation for public function `get_group_by_cols`
django/db/models/sql/query.py:1241:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1241:33: ANN001 Missing type annotation for function argument `wrapper`
django/db/models/sql/query.py:1251:9: ANN201 Missing return type annotation for public function `as_sql`
django/db/models/sql/query.py:1251:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1251:22: ANN001 Missing type annotation for function argument `compiler`
django/db/models/sql/query.py:1251:22: ARG002 Unused method argument: `compiler`
django/db/models/sql/query.py:1251:32: ANN001 Missing type annotation for function argument `connection`
django/db/models/sql/query.py:1263:19: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1266:9: ANN201 Missing return type annotation for public function `resolve_lookup_value`
django/db/models/sql/query.py:1266:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1266:36: ANN001 Missing type annotation for function argument `value`
django/db/models/sql/query.py:1266:43: ANN001 Missing type annotation for function argument `can_reuse`
django/db/models/sql/query.py:1266:54: ANN001 Missing type annotation for function argument `allow_joins`
django/db/models/sql/query.py:1266:67: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1266:67: ANN001 Missing type annotation for function argument `summarize`
django/db/models/sql/query.py:1287:9: ANN201 Missing return type annotation for public function `solve_lookup_type`
django/db/models/sql/query.py:1287:33: ANN001 Missing type annotation for function argument `lookup`
django/db/models/sql/query.py:1287:41: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1287:41: ANN001 Missing type annotation for function argument `summarize`
django/db/models/sql/query.py:1288:9: D200 One-line docstring should fit on one line
django/db/models/sql/query.py:1288:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1294:50: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1305:17: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1306:59: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1310:9: ANN201 Missing return type annotation for public function `check_query_object_type`
django/db/models/sql/query.py:1310:39: ANN001 Missing type annotation for function argument `value`
django/db/models/sql/query.py:1310:46: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:1310:52: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:1311:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1311:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1315:9: SIM102 Use a single `if` statement instead of nested `if` statements
django/db/models/sql/query.py:1316:51: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1318:21: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1319:48: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1322:9: ANN201 Missing return type annotation for public function `check_related_objects`
django/db/models/sql/query.py:1322:37: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:1322:44: ANN001 Missing type annotation for function argument `value`
django/db/models/sql/query.py:1322:51: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:1336:21: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1337:24: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1337:72: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1339:13: RET506 Unnecessary `elif` after `raise` statement
django/db/models/sql/query.py:1345:9: ANN201 Missing return type annotation for public function `check_filterable`
django/db/models/sql/query.py:1345:32: ANN001 Missing type annotation for function argument `expression`
django/db/models/sql/query.py:1348:43: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1352:26: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1358:9: ANN201 Missing return type annotation for public function `build_lookup`
django/db/models/sql/query.py:1358:28: ANN001 Missing type annotation for function argument `lookups`
django/db/models/sql/query.py:1358:37: ANN001 Missing type annotation for function argument `lhs`
django/db/models/sql/query.py:1358:42: ANN001 Missing type annotation for function argument `rhs`
django/db/models/sql/query.py:1359:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1381:17: RET502 [*] Do not implicitly `return None` in function able to return non-`None` value
django/db/models/sql/query.py:1388:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1388:34: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1389:50: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:1400:50: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:1404:9: ANN201 Missing return type annotation for public function `try_transform`
django/db/models/sql/query.py:1404:29: ANN001 Missing type annotation for function argument `lhs`
django/db/models/sql/query.py:1404:34: ANN001 Missing type annotation for function argument `name`
django/db/models/sql/query.py:1404:40: ANN001 Missing type annotation for function argument `lookups`
django/db/models/sql/query.py:1405:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1405:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1405:9: D401 First line of docstring should be in imperative mood: "Helper method for build_lookup(). Try to fetch and initialize"
django/db/models/sql/query.py:1412:9: RET505 Unnecessary `else` after `return` statement
django/db/models/sql/query.py:1415:53: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1418:30: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1427:17: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1428:88: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1431:9: C901 `build_filter` is too complex (20 > 10)
django/db/models/sql/query.py:1431:9: PLR0913 Too many arguments in function definition (10 > 5)
django/db/models/sql/query.py:1431:9: PLR0912 Too many branches (21 > 12)
django/db/models/sql/query.py:1431:9: PLR0915 Too many statements (60 > 50)
django/db/models/sql/query.py:1431:9: ANN201 Missing return type annotation for public function `build_filter`
django/db/models/sql/query.py:1433:9: ANN001 Missing type annotation for function argument `filter_expr`
django/db/models/sql/query.py:1434:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1434:9: ANN001 Missing type annotation for function argument `branch_negated`
django/db/models/sql/query.py:1435:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1435:9: ANN001 Missing type annotation for function argument `current_negated`
django/db/models/sql/query.py:1436:9: ANN001 Missing type annotation for function argument `can_reuse`
django/db/models/sql/query.py:1437:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1437:9: ANN001 Missing type annotation for function argument `allow_joins`
django/db/models/sql/query.py:1438:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1438:9: ANN001 Missing type annotation for function argument `split_subq`
django/db/models/sql/query.py:1439:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1439:9: ANN001 Missing type annotation for function argument `check_filterable`
django/db/models/sql/query.py:1440:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1440:9: ANN001 Missing type annotation for function argument `summarize`
django/db/models/sql/query.py:1441:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1441:9: ANN001 Missing type annotation for function argument `update_join_types`
django/db/models/sql/query.py:1443:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1443:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1469:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1469:30: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1484:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1484:33: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1486:84: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1489:69: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:1493:30: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1500:19: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1500:30: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1543:63: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1553:77: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1587:50: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:1592:52: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:1595:9: ANN201 Missing return type annotation for public function `add_filter`
django/db/models/sql/query.py:1595:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1595:26: ANN001 Missing type annotation for function argument `filter_lhs`
django/db/models/sql/query.py:1595:38: ANN001 Missing type annotation for function argument `filter_rhs`
django/db/models/sql/query.py:1598:9: ANN201 Missing return type annotation for public function `add_q`
django/db/models/sql/query.py:1598:21: ANN001 Missing type annotation for function argument `q_object`
django/db/models/sql/query.py:1599:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1599:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1599:9: D401 First line of docstring should be in imperative mood: "A preprocessor for the internal _add_q(). Responsible for doing final"
django/db/models/sql/query.py:1599:9: D402 First line should not be the function's signature
django/db/models/sql/query.py:1617:9: ANN201 Missing return type annotation for public function `build_where`
django/db/models/sql/query.py:1617:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1617:27: ANN001 Missing type annotation for function argument `filter_expr`
django/db/models/sql/query.py:1620:9: ANN201 Missing return type annotation for public function `clear_where`
django/db/models/sql/query.py:1620:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1623:9: PLR0913 Too many arguments in function definition (10 > 5)
django/db/models/sql/query.py:1623:9: ANN202 Missing return type annotation for private function `_add_q`
django/db/models/sql/query.py:1625:9: ANN001 Missing type annotation for function argument `q_object`
django/db/models/sql/query.py:1626:9: ANN001 Missing type annotation for function argument `used_aliases`
django/db/models/sql/query.py:1627:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1627:9: ANN001 Missing type annotation for function argument `branch_negated`
django/db/models/sql/query.py:1628:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1628:9: ANN001 Missing type annotation for function argument `current_negated`
django/db/models/sql/query.py:1629:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1629:9: ANN001 Missing type annotation for function argument `allow_joins`
django/db/models/sql/query.py:1630:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1630:9: ANN001 Missing type annotation for function argument `split_subq`
django/db/models/sql/query.py:1631:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1631:9: ANN001 Missing type annotation for function argument `check_filterable`
django/db/models/sql/query.py:1632:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1632:9: ANN001 Missing type annotation for function argument `summarize`
django/db/models/sql/query.py:1633:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1633:9: ANN001 Missing type annotation for function argument `update_join_types`
django/db/models/sql/query.py:1641:72: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1658:9: SIM108 Use ternary operator `needed_inner = joinpromoter.update_join_types(self) if update_join_types else []` instead of `if`-`else`-block
django/db/models/sql/query.py:1664:9: ANN201 Missing return type annotation for public function `add_filtered_relation`
django/db/models/sql/query.py:1664:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1664:37: ANN001 Missing type annotation for function argument `filtered_relation`
django/db/models/sql/query.py:1664:56: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1667:44: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1671:17: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1672:62: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1682:29: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1684:72: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1688:25: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1690:75: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1699:9: C901 `names_to_path` is too complex (20 > 10)
django/db/models/sql/query.py:1699:9: PLR0912 Too many branches (23 > 12)
django/db/models/sql/query.py:1699:9: PLR0915 Too many statements (64 > 50)
django/db/models/sql/query.py:1699:9: ANN201 Missing return type annotation for public function `names_to_path`
django/db/models/sql/query.py:1699:29: ANN001 Missing type annotation for function argument `names`
django/db/models/sql/query.py:1699:36: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:1699:42: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1699:42: ANN001 Missing type annotation for function argument `allow_many`
django/db/models/sql/query.py:1699:59: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1699:59: ANN001 Missing type annotation for function argument `fail_on_missing`
django/db/models/sql/query.py:1700:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1700:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1718:17: PLW2901 `for` loop variable `name` overwritten by assignment target
django/db/models/sql/query.py:1724:21: TRY301 Abstract `raise` to an inner function
django/db/models/sql/query.py:1748:25: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1751:59: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1754:29: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:1762:17: PLW2901 `for` loop variable `pos` overwritten by assignment target
django/db/models/sql/query.py:1769:26: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1772:25: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1773:73: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1809:25: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:1810:67: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1815:9: C901 `setup_joins` is too complex (14 > 10)
django/db/models/sql/query.py:1815:9: PLR0913 Too many arguments in function definition (6 > 5)
django/db/models/sql/query.py:1815:9: ANN201 Missing return type annotation for public function `setup_joins`
django/db/models/sql/query.py:1817:9: ANN001 Missing type annotation for function argument `names`
django/db/models/sql/query.py:1818:9: ANN001 Missing type annotation for function argument `opts`
django/db/models/sql/query.py:1819:9: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1820:9: ANN001 Missing type annotation for function argument `can_reuse`
django/db/models/sql/query.py:1821:9: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1821:9: ANN001 Missing type annotation for function argument `allow_many`
django/db/models/sql/query.py:1823:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1823:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1856:13: ANN202 Missing return type annotation for private function `final_transformer`
django/db/models/sql/query.py:1856:31: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:1856:38: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1872:13: PERF203 `try`-`except` within a loop incurs performance overhead
django/db/models/sql/query.py:1877:17: RET506 Unnecessary `else` after `raise` statement
django/db/models/sql/query.py:1886:17: ANN202 Missing return type annotation for private function `transform`
django/db/models/sql/query.py:1886:27: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:1886:34: ANN001 Missing type annotation for function argument `alias`
django/db/models/sql/query.py:1886:44: ANN001 Missing type annotation for function argument `name`
django/db/models/sql/query.py:1886:50: ANN001 Missing type annotation for function argument `previous`
django/db/models/sql/query.py:1893:25: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
django/db/models/sql/query.py:1894:21: RET506 Unnecessary `else` after `raise` statement
django/db/models/sql/query.py:1898:65: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1912:13: SIM108 Use ternary operator `nullable = self.is_nullable(join.join_field) if join.direct else True` instead of `if`-`else`-block
django/db/models/sql/query.py:1930:9: ANN201 Missing return type annotation for public function `trim_joins`
django/db/models/sql/query.py:1930:26: ANN001 Missing type annotation for function argument `targets`
django/db/models/sql/query.py:1930:35: ANN001 Missing type annotation for function argument `joins`
django/db/models/sql/query.py:1930:42: ANN001 Missing type annotation for function argument `path`
django/db/models/sql/query.py:1931:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:1931:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:1931:9: D401 First line of docstring should be in imperative mood: "The 'target' parameter is the final field being joined to, 'joins'"
django/db/models/sql/query.py:1944:13: B007 Loop control variable `pos` not used within loop body
django/db/models/sql/query.py:1963:9: ANN206 Missing return type annotation for classmethod `_gen_cols`
django/db/models/sql/query.py:1963:24: ANN001 Missing type annotation for function argument `exprs`
django/db/models/sql/query.py:1963:31: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1963:31: ANN001 Missing type annotation for function argument `include_external`
django/db/models/sql/query.py:1963:55: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1963:55: ANN001 Missing type annotation for function argument `resolve_refs`
django/db/models/sql/query.py:1968:57: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:1981:9: ANN206 Missing return type annotation for classmethod `_gen_col_aliases`
django/db/models/sql/query.py:1981:31: ANN001 Missing type annotation for function argument `exprs`
django/db/models/sql/query.py:1984:9: C901 `resolve_ref` is too complex (12 > 10)
django/db/models/sql/query.py:1984:9: PLR0912 Too many branches (13 > 12)
django/db/models/sql/query.py:1984:9: ANN201 Missing return type annotation for public function `resolve_ref`
django/db/models/sql/query.py:1984:9: D102 Missing docstring in public method
django/db/models/sql/query.py:1984:27: ANN001 Missing type annotation for function argument `name`
django/db/models/sql/query.py:1984:33: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1984:33: ANN001 Missing type annotation for function argument `allow_joins`
django/db/models/sql/query.py:1984:51: ANN001 Missing type annotation for function argument `reuse`
django/db/models/sql/query.py:1984:63: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:1984:63: ANN001 Missing type annotation for function argument `summarize`
django/db/models/sql/query.py:1990:31: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:1991:29: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:1991:86: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2000:25: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:2001:48: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2004:13: RET505 Unnecessary `else` after `return` statement
django/db/models/sql/query.py:2014:87: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2017:67: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2020:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:2021:21: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:2021:78: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2024:23: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:2025:21: EM101 Exception must not use a string literal, assign to variable first
django/db/models/sql/query.py:2025:86: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2034:9: ANN201 Missing return type annotation for public function `split_exclude`
django/db/models/sql/query.py:2034:29: ANN001 Missing type annotation for function argument `filter_expr`
django/db/models/sql/query.py:2034:42: ANN001 Missing type annotation for function argument `can_reuse`
django/db/models/sql/query.py:2034:53: ANN001 Missing type annotation for function argument `names_with_path`
django/db/models/sql/query.py:2035:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2035:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2055:9: SLF001 Private member accessed: `_filtered_relations`
django/db/models/sql/query.py:2071:18: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:2090:18: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:2103:9: ANN201 Missing return type annotation for public function `set_empty`
django/db/models/sql/query.py:2103:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2108:9: ANN201 Missing return type annotation for public function `is_empty`
django/db/models/sql/query.py:2108:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2111:9: ANN201 Missing return type annotation for public function `set_limits`
django/db/models/sql/query.py:2111:26: ANN001 Missing type annotation for function argument `low`
django/db/models/sql/query.py:2111:36: ANN001 Missing type annotation for function argument `high`
django/db/models/sql/query.py:2112:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2112:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2134:9: ANN201 Missing return type annotation for public function `clear_limits`
django/db/models/sql/query.py:2139:9: ANN201 Missing return type annotation for public function `is_sliced`
django/db/models/sql/query.py:2139:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2142:9: ANN201 Missing return type annotation for public function `has_limit_one`
django/db/models/sql/query.py:2142:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2145:9: ANN201 Missing return type annotation for public function `can_filter`
django/db/models/sql/query.py:2146:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2153:9: ANN201 Missing return type annotation for public function `clear_select_clause`
django/db/models/sql/query.py:2162:9: ANN201 Missing return type annotation for public function `clear_select_fields`
django/db/models/sql/query.py:2163:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2163:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2172:9: ANN201 Missing return type annotation for public function `add_select_col`
django/db/models/sql/query.py:2172:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2172:30: ANN001 Missing type annotation for function argument `col`
django/db/models/sql/query.py:2172:35: ANN001 Missing type annotation for function argument `name`
django/db/models/sql/query.py:2177:9: ANN201 Missing return type annotation for public function `set_select`
django/db/models/sql/query.py:2177:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2177:26: ANN001 Missing type annotation for function argument `cols`
django/db/models/sql/query.py:2181:9: ANN201 Missing return type annotation for public function `add_distinct_fields`
django/db/models/sql/query.py:2181:35: ANN002 Missing type annotation for `*field_names`
django/db/models/sql/query.py:2182:9: D200 One-line docstring should fit on one line
django/db/models/sql/query.py:2182:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2188:9: ANN201 Missing return type annotation for public function `add_fields`
django/db/models/sql/query.py:2188:26: ANN001 Missing type annotation for function argument `field_names`
django/db/models/sql/query.py:2188:39: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:2188:39: ANN001 Missing type annotation for function argument `allow_m2m`
django/db/models/sql/query.py:2189:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2189:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2202:78: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2210:21: PERF401 Use a list comprehension to create a transformed list
django/db/models/sql/query.py:2214:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
django/db/models/sql/query.py:2214:30: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:2220:13: RET506 Unnecessary `else` after `raise` statement
django/db/models/sql/query.py:2227:22: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2229:17: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
django/db/models/sql/query.py:2230:21: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:2231:65: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2234:9: ANN201 Missing return type annotation for public function `add_ordering`
django/db/models/sql/query.py:2234:28: ANN002 Missing type annotation for `*ordering`
django/db/models/sql/query.py:2235:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2235:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2248:17: PLW2901 `for` loop variable `item` overwritten by assignment target
django/db/models/sql/query.py:2255:60: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:2260:21: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:2261:65: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2264:30: UP031 Use format specifiers instead of percent format
django/db/models/sql/query.py:2270:9: ANN201 Missing return type annotation for public function `clear_ordering`
django/db/models/sql/query.py:2270:30: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:2270:30: ANN001 Missing type annotation for function argument `force`
django/db/models/sql/query.py:2270:43: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:2270:43: ANN001 Missing type annotation for function argument `clear_default`
django/db/models/sql/query.py:2271:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2271:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2286:9: ANN201 Missing return type annotation for public function `set_group_by`
django/db/models/sql/query.py:2286:28: FBT002 Boolean default positional argument in function definition
django/db/models/sql/query.py:2286:28: ANN001 Missing type annotation for function argument `allow_aliases`
django/db/models/sql/query.py:2287:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2319:9: ANN201 Missing return type annotation for public function `add_select_related`
django/db/models/sql/query.py:2319:34: ANN001 Missing type annotation for function argument `fields`
django/db/models/sql/query.py:2320:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2320:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2335:9: PLR0913 Too many arguments in function definition (7 > 5)
django/db/models/sql/query.py:2335:9: ANN201 Missing return type annotation for public function `add_extra`
django/db/models/sql/query.py:2335:25: ANN001 Missing type annotation for function argument `select`
django/db/models/sql/query.py:2335:33: ANN001 Missing type annotation for function argument `select_params`
django/db/models/sql/query.py:2335:48: ANN001 Missing type annotation for function argument `where`
django/db/models/sql/query.py:2335:55: ANN001 Missing type annotation for function argument `params`
django/db/models/sql/query.py:2335:63: ANN001 Missing type annotation for function argument `tables`
django/db/models/sql/query.py:2335:71: ANN001 Missing type annotation for function argument `order_by`
django/db/models/sql/query.py:2336:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2336:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2346:13: SIM108 Use ternary operator `param_iter = iter(select_params) if select_params else iter([])` instead of `if`-`else`-block
django/db/models/sql/query.py:2352:17: PLW2901 `for` loop variable `entry` overwritten by assignment target
django/db/models/sql/query.py:2368:9: ANN201 Missing return type annotation for public function `clear_deferred_loading`
django/db/models/sql/query.py:2372:9: ANN201 Missing return type annotation for public function `add_deferred_loading`
django/db/models/sql/query.py:2372:36: ANN001 Missing type annotation for function argument `field_names`
django/db/models/sql/query.py:2373:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2373:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2388:9: PLR5501 [*] Use `elif` instead of `else` then `if`, to reduce indentation
django/db/models/sql/query.py:2397:9: ANN201 Missing return type annotation for public function `add_immediate_loading`
django/db/models/sql/query.py:2397:37: ANN001 Missing type annotation for function argument `field_names`
django/db/models/sql/query.py:2398:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2398:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2398:9: D400 First line should end with a period
django/db/models/sql/query.py:2398:9: D415 First line should end with a period, question mark, or exclamation point
django/db/models/sql/query.py:2421:9: ANN201 Missing return type annotation for public function `set_annotation_mask`
django/db/models/sql/query.py:2421:35: ANN001 Missing type annotation for function argument `names`
django/db/models/sql/query.py:2440:9: ANN201 Missing return type annotation for public function `append_annotation_mask`
django/db/models/sql/query.py:2440:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2440:38: ANN001 Missing type annotation for function argument `names`
django/db/models/sql/query.py:2444:9: ANN201 Missing return type annotation for public function `set_extra_mask`
django/db/models/sql/query.py:2444:30: ANN001 Missing type annotation for function argument `names`
django/db/models/sql/query.py:2445:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2445:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2456:9: ANN201 Missing return type annotation for public function `has_select_fields`
django/db/models/sql/query.py:2456:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2459:9: C901 `set_values` is too complex (12 > 10)
django/db/models/sql/query.py:2459:9: PLR0912 Too many branches (14 > 12)
django/db/models/sql/query.py:2459:9: ANN201 Missing return type annotation for public function `set_values`
django/db/models/sql/query.py:2459:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2459:26: ANN001 Missing type annotation for function argument `fields`
django/db/models/sql/query.py:2479:39: S611 Use of `RawSQL` can lead to SQL injection vulnerabilities
django/db/models/sql/query.py:2484:31: TRY003 Avoid specifying long messages outside the exception class
django/db/models/sql/query.py:2485:29: EM102 Exception must not use an f-string literal, assign to variable first
django/db/models/sql/query.py:2486:42: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2493:69: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:2499:47: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:2505:37: SLF001 Private member accessed: `_meta`
django/db/models/sql/query.py:2505:72: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:2505:77: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2517:21: PLW2901 `for` loop variable `expr` overwritten by assignment target
django/db/models/sql/query.py:2522:38: FBT003 Boolean positional value in function call
django/db/models/sql/query.py:2526:9: ANN201 Missing return type annotation for public function `annotation_select`
django/db/models/sql/query.py:2527:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2527:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2533:9: RET505 Unnecessary `elif` after `return` statement
django/db/models/sql/query.py:2546:9: ANN201 Missing return type annotation for public function `extra_select`
django/db/models/sql/query.py:2546:9: D102 Missing docstring in public method
django/db/models/sql/query.py:2551:9: RET505 Unnecessary `elif` after `return` statement
django/db/models/sql/query.py:2559:9: C901 `trim_start` is too complex (11 > 10)
django/db/models/sql/query.py:2559:9: ANN201 Missing return type annotation for public function `trim_start`
django/db/models/sql/query.py:2559:26: ANN001 Missing type annotation for function argument `names_with_path`
django/db/models/sql/query.py:2560:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2560:9: D209 [*] Multi-line docstring closing quotes should be on a separate line
django/db/models/sql/query.py:2560:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2613:55: COM812 [*] Trailing comma missing
django/db/models/sql/query.py:2618:15: TD002 Missing author in TODO; try: `# TODO(<author_name>): ...` or `# TODO @<author_name>: ...`
django/db/models/sql/query.py:2618:15: TD003 Missing issue link on the line following this TODO
django/db/models/sql/query.py:2618:15: FIX002 Line contains TODO, consider resolving the issue
django/db/models/sql/query.py:2636:9: ANN201 Missing return type annotation for public function `is_nullable`
django/db/models/sql/query.py:2636:27: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:2637:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2655:5: ANN202 Missing return type annotation for private function `get_order_dir`
django/db/models/sql/query.py:2655:19: ANN001 Missing type annotation for function argument `field`
django/db/models/sql/query.py:2655:26: ANN001 Missing type annotation for function argument `default`
django/db/models/sql/query.py:2656:5: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2656:5: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2670:5: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2670:5: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2675:9: ANN204 Missing return type annotation for special method `__init__`
django/db/models/sql/query.py:2675:24: ANN001 Missing type annotation for function argument `connector`
django/db/models/sql/query.py:2675:35: ANN001 Missing type annotation for function argument `num_children`
django/db/models/sql/query.py:2675:49: ANN001 Missing type annotation for function argument `negated`
django/db/models/sql/query.py:2690:9: ANN204 Missing return type annotation for special method `__repr__`
django/db/models/sql/query.py:2696:9: ANN202 Missing return type annotation for private function `add_votes`
django/db/models/sql/query.py:2696:25: ANN001 Missing type annotation for function argument `votes`
django/db/models/sql/query.py:2697:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2697:9: D212 [*] Multi-line docstring summary should start at the first line
django/db/models/sql/query.py:2703:9: ANN202 Missing return type annotation for private function `update_join_types`
django/db/models/sql/query.py:2703:33: ANN001 Missing type annotation for function argument `query`
django/db/models/sql/query.py:2704:9: D205 1 blank line required between summary line and description
django/db/models/sql/query.py:2704:9: D212 [*] Multi-line docstring summary should start at the first line
tests/custom_lookups/tests.py:1:1: D100 Missing docstring in public module
tests/custom_lookups/tests.py:16:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:19:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:19:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:19:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:19:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:23:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:25:9: ANN201 Missing return type annotation for public function `as_oracle`
tests/custom_lookups/tests.py:25:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:25:25: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:25:35: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:29:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:32:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:35:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:35:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:35:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:35:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:35:32: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:37:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:39:9: ANN201 Missing return type annotation for public function `as_oracle`
tests/custom_lookups/tests.py:39:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:39:25: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:39:35: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:39:35: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:39:47: ANN003 Missing type annotation for `**extra_context`
tests/custom_lookups/tests.py:39:49: ARG002 Unused method argument: `extra_context`
tests/custom_lookups/tests.py:41:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:44:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:48:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:52:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:52:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:52:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:52:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:52:32: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:54:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:57:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:60:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:60:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:60:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:60:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:60:32: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:62:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:65:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:69:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:69:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:69:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:69:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:69:32: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:71:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:74:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:78:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:78:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:78:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:78:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:83:9: ANN201 Missing return type annotation for public function `output_field`
tests/custom_lookups/tests.py:83:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:88:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:91:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:91:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:91:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:91:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:102:13: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:111:5: D200 One-line docstring should fit on one line
tests/custom_lookups/tests.py:111:5: D212 [*] Multi-line docstring summary should start at the first line
tests/custom_lookups/tests.py:115:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:115:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:115:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:115:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:126:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:130:5: D200 One-line docstring should fit on one line
tests/custom_lookups/tests.py:130:5: D212 [*] Multi-line docstring summary should start at the first line
tests/custom_lookups/tests.py:130:5: D404 First word of the docstring should not be "This"
tests/custom_lookups/tests.py:136:9: ANN201 Missing return type annotation for public function `get_rhs_op`
tests/custom_lookups/tests.py:136:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:136:26: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:136:38: ANN001 Missing type annotation for function argument `rhs`
tests/custom_lookups/tests.py:140:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:141:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:141:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:141:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:141:22: ARG002 Unused method argument: `compiler`
tests/custom_lookups/tests.py:141:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:141:32: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:142:16: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:145:9: ANN201 Missing return type annotation for public function `output_field`
tests/custom_lookups/tests.py:145:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:149:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:150:9: ANN204 Missing return type annotation for special method `__init__`
tests/custom_lookups/tests.py:150:9: D107 Missing docstring in `__init__`
tests/custom_lookups/tests.py:150:24: ANN001 Missing type annotation for function argument `name`
tests/custom_lookups/tests.py:150:30: ANN002 Missing type annotation for `*args`
tests/custom_lookups/tests.py:150:37: ANN003 Missing type annotation for `**kwargs`
tests/custom_lookups/tests.py:155:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:156:9: ANN204 Missing return type annotation for special method `__init__`
tests/custom_lookups/tests.py:156:9: D107 Missing docstring in `__init__`
tests/custom_lookups/tests.py:156:24: ANN001 Missing type annotation for function argument `name`
tests/custom_lookups/tests.py:156:30: ANN002 Missing type annotation for `*args`
tests/custom_lookups/tests.py:156:37: ANN003 Missing type annotation for `**kwargs`
tests/custom_lookups/tests.py:161:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:162:9: ANN204 Missing return type annotation for special method `__init__`
tests/custom_lookups/tests.py:162:9: D107 Missing docstring in `__init__`
tests/custom_lookups/tests.py:162:24: ANN001 Missing type annotation for function argument `key`
tests/custom_lookups/tests.py:162:29: ANN001 Missing type annotation for function argument `name`
tests/custom_lookups/tests.py:166:9: ANN204 Missing return type annotation for special method `__call__`
tests/custom_lookups/tests.py:166:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:166:24: ANN002 Missing type annotation for `*args`
tests/custom_lookups/tests.py:166:31: ANN003 Missing type annotation for `**kwargs`
tests/custom_lookups/tests.py:172:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:173:9: ANN201 Missing return type annotation for public function `get_lookup`
tests/custom_lookups/tests.py:173:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:173:26: ANN001 Missing type annotation for function argument `lookup_name`
tests/custom_lookups/tests.py:179:9: ANN201 Missing return type annotation for public function `get_transform`
tests/custom_lookups/tests.py:179:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:179:29: ANN001 Missing type annotation for function argument `lookup_name`
tests/custom_lookups/tests.py:186:7: DJ008 Model does not define `__str__` method
tests/custom_lookups/tests.py:186:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:194:5: D200 One-line docstring should fit on one line
tests/custom_lookups/tests.py:194:5: D212 [*] Multi-line docstring summary should start at the first line
tests/custom_lookups/tests.py:200:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:200:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:200:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:200:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:207:13: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:213:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:217:9: ANN201 Missing return type annotation for public function `output_field`
tests/custom_lookups/tests.py:217:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:220:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:220:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:220:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:220:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:220:32: ARG002 Unused method argument: `connection`
tests/custom_lookups/tests.py:222:16: UP032 [*] Use f-string instead of `format` call
tests/custom_lookups/tests.py:225:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:229:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:233:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:237:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:238:9: ANN201 Missing return type annotation for public function `test_custom_name_lookup`
tests/custom_lookups/tests.py:238:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:249:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:250:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:252:9: ANN201 Missing return type annotation for public function `test_custom_exact_lookup_none_rhs`
tests/custom_lookups/tests.py:253:9: D205 1 blank line required between summary line and description
tests/custom_lookups/tests.py:253:9: D212 [*] Multi-line docstring summary should start at the first line
tests/custom_lookups/tests.py:257:17: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:258:9: N806 Variable `OldExactLookup` in function should be lowercase
tests/custom_lookups/tests.py:262:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:266:9: ANN201 Missing return type annotation for public function `test_basic_lookup`
tests/custom_lookups/tests.py:266:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:272:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:273:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:274:77: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:276:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:277:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:280:74: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:282:9: ANN201 Missing return type annotation for public function `test_birthdate_month`
tests/custom_lookups/tests.py:282:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:288:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:289:82: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:291:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:292:81: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:294:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:295:82: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:297:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:298:82: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:300:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:301:79: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:304:9: ANN201 Missing return type annotation for public function `test_div3_extract`
tests/custom_lookups/tests.py:304:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:311:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:312:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:313:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:314:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:315:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:316:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:317:69: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:320:9: ANN201 Missing return type annotation for public function `test_foreignobject_lookup_registration`
tests/custom_lookups/tests.py:320:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:321:17: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:324:13: PT009 Use a regular `assert` instead of unittest-style `assertIs`
tests/custom_lookups/tests.py:328:13: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:330:9: ANN201 Missing return type annotation for public function `test_lookups_caching`
tests/custom_lookups/tests.py:330:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:331:17: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:335:9: PT009 Use a regular `assert` instead of unittest-style `assertNotIn`
tests/custom_lookups/tests.py:340:13: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:342:9: PT009 Use a regular `assert` instead of unittest-style `assertNotIn`
tests/custom_lookups/tests.py:345:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:346:9: ANN201 Missing return type annotation for public function `test_bilateral_upper`
tests/custom_lookups/tests.py:346:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:351:13: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/custom_lookups/tests.py:355:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:360:9: ANN201 Missing return type annotation for public function `test_bilateral_inner_qs`
tests/custom_lookups/tests.py:360:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:365:71: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:368:9: ANN201 Missing return type annotation for public function `test_bilateral_multi_value`
tests/custom_lookups/tests.py:368:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:375:18: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:379:27: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:385:9: ANN201 Missing return type annotation for public function `test_div3_bilateral_extract`
tests/custom_lookups/tests.py:385:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:392:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:393:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:394:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:395:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:396:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:397:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:398:69: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:401:9: ANN201 Missing return type annotation for public function `test_bilateral_order`
tests/custom_lookups/tests.py:401:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:403:81: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:412:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:413:69: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:415:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:417:9: ANN201 Missing return type annotation for public function `test_transform_order_by`
tests/custom_lookups/tests.py:417:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:424:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:426:9: ANN201 Missing return type annotation for public function `test_bilateral_fexpr`
tests/custom_lookups/tests.py:426:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:433:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:434:76: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:437:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:438:84: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:443:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:445:9: ANN201 Missing return type annotation for public function `test_datetime_output_field`
tests/custom_lookups/tests.py:445:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:448:39: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/custom_lookups/tests.py:449:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:450:88: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:454:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:456:9: ANN206 Missing return type annotation for classmethod `setUpTestData`
tests/custom_lookups/tests.py:456:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:462:9: ANN201 Missing return type annotation for public function `setUp`
tests/custom_lookups/tests.py:462:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:464:25: SLF001 Private member accessed: `_unregister_lookup`
tests/custom_lookups/tests.py:467:74: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:469:9: ANN201 Missing return type annotation for public function `test_year_lte`
tests/custom_lookups/tests.py:469:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:471:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:475:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:476:81: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:479:9: PT009 Use a regular `assert` instead of unittest-style `assertNotIn`
tests/custom_lookups/tests.py:480:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:481:68: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:484:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:487:74: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:489:9: ANN201 Missing return type annotation for public function `test_year_lte_fexpr`
tests/custom_lookups/tests.py:489:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:497:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:498:88: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:500:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:501:78: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:504:9: ANN201 Missing return type annotation for public function `test_year_lte_sql`
tests/custom_lookups/tests.py:504:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:509:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:510:84: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:512:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:514:9: ANN201 Missing return type annotation for public function `test_postgres_year_exact`
tests/custom_lookups/tests.py:514:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:516:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:517:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:519:9: ANN201 Missing return type annotation for public function `test_custom_implementation_year_exact`
tests/custom_lookups/tests.py:519:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:523:17: ANN202 Missing return type annotation for private function `as_custom_sql`
tests/custom_lookups/tests.py:523:31: ANN001 Missing type annotation for function argument `self`
tests/custom_lookups/tests.py:523:37: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:523:47: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:525:55: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:530:21: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:539:13: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:540:86: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:551:21: ANN202 Missing return type annotation for private function `as_custom_sql`
tests/custom_lookups/tests.py:551:41: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:551:51: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:553:59: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:558:25: UP031 Use format specifiers instead of percent format
tests/custom_lookups/tests.py:572:13: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:573:86: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:576:13: SLF001 Private member accessed: `_unregister_lookup`
tests/custom_lookups/tests.py:580:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:583:18: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
tests/custom_lookups/tests.py:585:9: ANN201 Missing return type annotation for public function `as_sql`
tests/custom_lookups/tests.py:585:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:585:22: ANN001 Missing type annotation for function argument `compiler`
tests/custom_lookups/tests.py:585:32: ANN001 Missing type annotation for function argument `connection`
tests/custom_lookups/tests.py:590:9: ANN201 Missing return type annotation for public function `output_field`
tests/custom_lookups/tests.py:590:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:593:9: ANN201 Missing return type annotation for public function `get_lookup`
tests/custom_lookups/tests.py:593:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:593:26: ANN001 Missing type annotation for function argument `lookup_name`
tests/custom_lookups/tests.py:597:9: ANN201 Missing return type annotation for public function `get_transform`
tests/custom_lookups/tests.py:597:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:597:29: ANN001 Missing type annotation for function argument `lookup_name`
tests/custom_lookups/tests.py:602:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:603:9: ANN201 Missing return type annotation for public function `test_call_order`
tests/custom_lookups/tests.py:603:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:612:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:613:76: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:623:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:627:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:631:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:634:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:635:9: ANN201 Missing return type annotation for public function `test_overridden_get_lookup`
tests/custom_lookups/tests.py:635:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:637:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:639:9: ANN201 Missing return type annotation for public function `test_overridden_get_transform`
tests/custom_lookups/tests.py:639:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:641:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:643:9: ANN201 Missing return type annotation for public function `test_overridden_get_lookup_chain`
tests/custom_lookups/tests.py:643:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:645:64: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:647:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:649:9: ANN201 Missing return type annotation for public function `test_overridden_get_transform_chain`
tests/custom_lookups/tests.py:649:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:651:62: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:653:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/custom_lookups/tests.py:656:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:657:9: ANN201 Missing return type annotation for public function `test_subquery_usage`
tests/custom_lookups/tests.py:657:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:664:58: COM812 [*] Trailing comma missing
tests/custom_lookups/tests.py:666:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/custom_lookups/tests.py:669:7: D101 Missing docstring in public class
tests/custom_lookups/tests.py:670:9: ANN201 Missing return type annotation for public function `test_class_lookup`
tests/custom_lookups/tests.py:670:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:671:23: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:673:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:674:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:676:9: ANN201 Missing return type annotation for public function `test_instance_lookup`
tests/custom_lookups/tests.py:676:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:677:23: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:678:24: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:680:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:681:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:682:13: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:683:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:684:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:685:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:687:9: ANN201 Missing return type annotation for public function `test_instance_lookup_override_class_lookups`
tests/custom_lookups/tests.py:687:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:688:23: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:689:24: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:692:17: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:693:17: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:694:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:695:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:696:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:697:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:699:9: ANN201 Missing return type annotation for public function `test_instance_lookup_override`
tests/custom_lookups/tests.py:699:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:700:23: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:702:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:704:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:705:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:707:9: ANN201 Missing return type annotation for public function `test_lookup_on_transform`
tests/custom_lookups/tests.py:707:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:711:17: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:715:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:716:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:718:9: ANN201 Missing return type annotation for public function `test_transform_on_field`
tests/custom_lookups/tests.py:718:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:719:23: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:720:24: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:722:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:723:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:725:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:726:13: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:727:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:728:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:730:9: ANN201 Missing return type annotation for public function `test_related_lookup`
tests/custom_lookups/tests.py:730:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:731:26: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:733:13: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/custom_lookups/tests.py:735:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:737:9: ANN201 Missing return type annotation for public function `test_instance_related_lookup`
tests/custom_lookups/tests.py:737:9: D102 Missing docstring in public method
tests/custom_lookups/tests.py:738:26: SLF001 Private member accessed: `_meta`
tests/custom_lookups/tests.py:740:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/custom_lookups/tests.py:741:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNone`
tests/lookup/tests.py:1:1: D100 Missing docstring in public module
tests/lookup/tests.py:48:7: D101 Missing docstring in public class
tests/lookup/tests.py:50:9: ANN206 Missing return type annotation for classmethod `setUpTestData`
tests/lookup/tests.py:50:9: D102 Missing docstring in public method
tests/lookup/tests.py:57:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:63:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:69:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:75:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:81:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:87:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:93:22: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:105:9: ANN201 Missing return type annotation for public function `test_exists`
tests/lookup/tests.py:105:9: D102 Missing docstring in public method
tests/lookup/tests.py:107:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:111:9: PT009 Use a regular `assert` instead of unittest-style `assertFalse`
tests/lookup/tests.py:113:9: ANN201 Missing return type annotation for public function `test_lookup_int_as_str`
tests/lookup/tests.py:113:9: D102 Missing docstring in public method
tests/lookup/tests.py:115:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:121:9: ANN201 Missing return type annotation for public function `test_lookup_date_as_str`
tests/lookup/tests.py:121:9: D102 Missing docstring in public method
tests/lookup/tests.py:123:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:128:9: ANN201 Missing return type annotation for public function `test_iterator`
tests/lookup/tests.py:128:9: D102 Missing docstring in public method
tests/lookup/tests.py:131:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
tests/lookup/tests.py:153:9: ANN201 Missing return type annotation for public function `test_count`
tests/lookup/tests.py:153:9: D102 Missing docstring in public method
tests/lookup/tests.py:155:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:156:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:157:52: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:157:85: COM812 [*] Trailing comma missing
tests/lookup/tests.py:159:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:160:80: COM812 [*] Trailing comma missing
tests/lookup/tests.py:165:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:166:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:167:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:168:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:171:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:172:85: COM812 [*] Trailing comma missing
tests/lookup/tests.py:175:9: ANN201 Missing return type annotation for public function `test_in_bulk`
tests/lookup/tests.py:175:9: D102 Missing docstring in public method
tests/lookup/tests.py:178:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:179:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:180:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:192:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:193:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:194:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:195:84: COM812 [*] Trailing comma missing
tests/lookup/tests.py:197:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:198:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:199:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:200:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:201:79: COM812 [*] Trailing comma missing
tests/lookup/tests.py:203:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:204:14: PT027 Use `pytest.raises` instead of unittest-style `assertRaises`
tests/lookup/tests.py:207:9: ANN201 Missing return type annotation for public function `test_in_bulk_lots_of_ids`
tests/lookup/tests.py:207:9: D102 Missing docstring in public method
tests/lookup/tests.py:214:75: COM812 [*] Trailing comma missing
tests/lookup/tests.py:218:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:220:9: ANN201 Missing return type annotation for public function `test_in_bulk_with_field`
tests/lookup/tests.py:220:9: D102 Missing docstring in public method
tests/lookup/tests.py:221:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:223:78: COM812 [*] Trailing comma missing
tests/lookup/tests.py:232:9: ANN201 Missing return type annotation for public function `test_in_bulk_meta_constraint`
tests/lookup/tests.py:232:9: D102 Missing docstring in public method
tests/lookup/tests.py:236:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:244:9: ANN201 Missing return type annotation for public function `test_in_bulk_non_unique_field`
tests/lookup/tests.py:244:9: D102 Missing docstring in public method
tests/lookup/tests.py:250:9: ANN201 Missing return type annotation for public function `test_in_bulk_preserve_ordering`
tests/lookup/tests.py:250:9: D102 Missing docstring in public method
tests/lookup/tests.py:256:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:262:9: ANN201 Missing return type annotation for public function `test_in_bulk_preserve_ordering_with_batch_size`
tests/lookup/tests.py:262:9: D102 Missing docstring in public method
tests/lookup/tests.py:271:13: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:279:9: ANN201 Missing return type annotation for public function `test_in_bulk_distinct_field`
tests/lookup/tests.py:279:9: D102 Missing docstring in public method
tests/lookup/tests.py:280:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:291:9: ANN201 Missing return type annotation for public function `test_in_bulk_multiple_distinct_field`
tests/lookup/tests.py:291:9: D102 Missing docstring in public method
tests/lookup/tests.py:300:9: ANN201 Missing return type annotation for public function `test_in_bulk_non_unique_meta_constaint`
tests/lookup/tests.py:300:9: D102 Missing docstring in public method
tests/lookup/tests.py:301:15: DJ008 Model does not define `__str__` method
tests/lookup/tests.py:307:31: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
tests/lookup/tests.py:321:13: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
tests/lookup/tests.py:325:9: ANN201 Missing return type annotation for public function `test_in_bulk_sliced_queryset`
tests/lookup/tests.py:325:9: D102 Missing docstring in public method
tests/lookup/tests.py:330:9: ANN201 Missing return type annotation for public function `test_values`
tests/lookup/tests.py:330:9: D102 Missing docstring in public method
tests/lookup/tests.py:333:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:345:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:346:52: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:349:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:363:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:376:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:378:36: COM812 [*] Trailing comma missing
tests/lookup/tests.py:400:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:401:56: S610 Use of Django `extra` can lead to SQL injection vulnerabilities
tests/lookup/tests.py:412:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:416:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:428:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:430:44: COM812 [*] Trailing comma missing
tests/lookup/tests.py:442:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:445:70: COM812 [*] Trailing comma missing
tests/lookup/tests.py:505:36: COM812 [*] Trailing comma missing
tests/lookup/tests.py:508:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:515:33: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:517:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:521:9: ANN201 Missing return type annotation for public function `test_values_list`
tests/lookup/tests.py:521:9: D102 Missing docstring in public method
tests/lookup/tests.py:526:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:538:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:550:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:562:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:576:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:590:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:605:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:619:14: PT027 Use `pytest.raises` instead of unittest-style `assertRaises`
tests/lookup/tests.py:622:9: ANN201 Missing return type annotation for public function `test_get_next_previous_by`
tests/lookup/tests.py:622:9: D102 Missing docstring in public method
tests/lookup/tests.py:627:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:628:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:629:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:633:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:634:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:635:14: PT027 Use `pytest.raises` instead of unittest-style `assertRaises`
tests/lookup/tests.py:637:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:638:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:640:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:641:77: COM812 [*] Trailing comma missing
tests/lookup/tests.py:643:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:644:77: COM812 [*] Trailing comma missing
tests/lookup/tests.py:646:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:647:77: COM812 [*] Trailing comma missing
tests/lookup/tests.py:649:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:650:77: COM812 [*] Trailing comma missing
tests/lookup/tests.py:652:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:653:77: COM812 [*] Trailing comma missing
tests/lookup/tests.py:655:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:656:77: COM812 [*] Trailing comma missing
tests/lookup/tests.py:659:9: ANN201 Missing return type annotation for public function `test_escaping`
tests/lookup/tests.py:659:9: D102 Missing docstring in public method
tests/lookup/tests.py:663:59: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:663:81: COM812 [*] Trailing comma missing
tests/lookup/tests.py:666:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:670:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:675:61: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:675:83: COM812 [*] Trailing comma missing
tests/lookup/tests.py:677:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:681:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:686:60: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:686:82: COM812 [*] Trailing comma missing
tests/lookup/tests.py:688:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:693:9: ANN201 Missing return type annotation for public function `test_exclude`
tests/lookup/tests.py:693:9: D102 Missing docstring in public method
tests/lookup/tests.py:695:59: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:695:81: COM812 [*] Trailing comma missing
tests/lookup/tests.py:698:61: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:698:83: COM812 [*] Trailing comma missing
tests/lookup/tests.py:701:60: DTZ001 `datetime.datetime()` called without a `tzinfo` argument
tests/lookup/tests.py:701:82: COM812 [*] Trailing comma missing
tests/lookup/tests.py:704:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:706:42: COM812 [*] Trailing comma missing
tests/lookup/tests.py:710:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:714:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:719:9: ANN201 Missing return type annotation for public function `test_none`
tests/lookup/tests.py:719:9: D102 Missing docstring in public method
tests/lookup/tests.py:721:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:722:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:723:78: COM812 [*] Trailing comma missing
tests/lookup/tests.py:725:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:726:78: COM812 [*] Trailing comma missing
tests/lookup/tests.py:728:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:729:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:730:85: COM812 [*] Trailing comma missing
tests/lookup/tests.py:732:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:734:9: ANN201 Missing return type annotation for public function `test_in`
tests/lookup/tests.py:734:9: D102 Missing docstring in public method
tests/lookup/tests.py:735:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:740:9: ANN201 Missing return type annotation for public function `test_in_empty_list`
tests/lookup/tests.py:740:9: D102 Missing docstring in public method
tests/lookup/tests.py:741:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:743:9: ANN201 Missing return type annotation for public function `test_in_different_database`
tests/lookup/tests.py:743:9: D102 Missing docstring in public method
tests/lookup/tests.py:751:9: ANN201 Missing return type annotation for public function `test_in_keeps_value_ordering`
tests/lookup/tests.py:751:9: D102 Missing docstring in public method
tests/lookup/tests.py:757:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:759:9: ANN201 Missing return type annotation for public function `test_in_ignore_none`
tests/lookup/tests.py:759:9: D102 Missing docstring in public method
tests/lookup/tests.py:761:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:766:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:766:23: UP031 Use format specifiers instead of percent format
tests/lookup/tests.py:768:9: ANN201 Missing return type annotation for public function `test_in_ignore_solo_none`
tests/lookup/tests.py:768:9: D102 Missing docstring in public method
tests/lookup/tests.py:770:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:772:9: ANN201 Missing return type annotation for public function `test_in_ignore_none_with_unhashable_items`
tests/lookup/tests.py:772:9: D102 Missing docstring in public method
tests/lookup/tests.py:777:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:782:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:782:23: UP031 Use format specifiers instead of percent format
tests/lookup/tests.py:784:9: ANN201 Missing return type annotation for public function `test_error_messages`
tests/lookup/tests.py:784:9: D102 Missing docstring in public method
tests/lookup/tests.py:793:9: ANN201 Missing return type annotation for public function `test_unsupported_lookups`
tests/lookup/tests.py:793:9: D102 Missing docstring in public method
tests/lookup/tests.py:843:9: ANN201 Missing return type annotation for public function `test_unsupported_lookups_custom_lookups`
tests/lookup/tests.py:843:9: D102 Missing docstring in public method
tests/lookup/tests.py:844:22: SLF001 Private member accessed: `_meta`
tests/lookup/tests.py:849:9: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
tests/lookup/tests.py:853:9: ANN201 Missing return type annotation for public function `test_relation_nested_lookup_error`
tests/lookup/tests.py:853:9: D102 Missing docstring in public method
tests/lookup/tests.py:868:9: ANN201 Missing return type annotation for public function `test_unsupported_lookup_reverse_foreign_key`
tests/lookup/tests.py:868:9: D102 Missing docstring in public method
tests/lookup/tests.py:876:9: ANN201 Missing return type annotation for public function `test_unsupported_lookup_reverse_foreign_key_custom_lookups`
tests/lookup/tests.py:876:9: D102 Missing docstring in public method
tests/lookup/tests.py:881:20: SLF001 Private member accessed: `_meta`
tests/lookup/tests.py:882:9: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
tests/lookup/tests.py:886:9: ANN201 Missing return type annotation for public function `test_filter_by_reverse_related_field_transform`
tests/lookup/tests.py:886:9: D102 Missing docstring in public method
tests/lookup/tests.py:887:20: SLF001 Private member accessed: `_meta`
tests/lookup/tests.py:889:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:890:75: COM812 [*] Trailing comma missing
tests/lookup/tests.py:893:9: ANN201 Missing return type annotation for public function `test_regex`
tests/lookup/tests.py:893:9: D102 Missing docstring in public method
tests/lookup/tests.py:897:15: DTZ005 `datetime.datetime.now()` called without a `tz` argument
tests/lookup/tests.py:909:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:972:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:984:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:996:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1014:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1026:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1031:9: ANN201 Missing return type annotation for public function `test_regex_backreferencing`
tests/lookup/tests.py:1031:9: D102 Missing docstring in public method
tests/lookup/tests.py:1033:15: DTZ005 `datetime.datetime.now()` called without a `tz` argument
tests/lookup/tests.py:1043:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1047:38: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1052:9: ANN201 Missing return type annotation for public function `test_regex_null`
tests/lookup/tests.py:1053:9: D200 One-line docstring should fit on one line
tests/lookup/tests.py:1053:9: D212 [*] Multi-line docstring summary should start at the first line
tests/lookup/tests.py:1053:9: D400 First line should end with a period
tests/lookup/tests.py:1053:9: D415 First line should end with a period, question mark, or exclamation point
tests/lookup/tests.py:1059:9: ANN201 Missing return type annotation for public function `test_textfield_exact_null`
tests/lookup/tests.py:1059:9: D102 Missing docstring in public method
tests/lookup/tests.py:1061:13: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1063:48: SLF001 Private member accessed: `_meta`
tests/lookup/tests.py:1064:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:1066:9: ANN201 Missing return type annotation for public function `test_regex_non_string`
tests/lookup/tests.py:1067:9: D200 One-line docstring should fit on one line
tests/lookup/tests.py:1067:9: D212 [*] Multi-line docstring summary should start at the first line
tests/lookup/tests.py:1067:9: D400 First line should end with a period
tests/lookup/tests.py:1067:9: D415 First line should end with a period, question mark, or exclamation point
tests/lookup/tests.py:1073:9: ANN201 Missing return type annotation for public function `test_regex_non_ascii`
tests/lookup/tests.py:1074:9: D200 One-line docstring should fit on one line
tests/lookup/tests.py:1074:9: D212 [*] Multi-line docstring summary should start at the first line
tests/lookup/tests.py:1080:9: ANN201 Missing return type annotation for public function `test_nonfield_lookups`
tests/lookup/tests.py:1081:9: D200 One-line docstring should fit on one line
tests/lookup/tests.py:1081:9: D212 [*] Multi-line docstring summary should start at the first line
tests/lookup/tests.py:1103:9: ANN201 Missing return type annotation for public function `test_lookup_collision`
tests/lookup/tests.py:1104:9: D205 1 blank line required between summary line and description
tests/lookup/tests.py:1104:9: D212 [*] Multi-line docstring summary should start at the first line
tests/lookup/tests.py:1128:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1129:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1130:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1131:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1134:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1135:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1136:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1137:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1138:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1139:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1142:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1143:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1144:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1145:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1148:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1149:82: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1151:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1152:89: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1154:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1155:79: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1157:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1158:86: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1162:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1163:82: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1165:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1166:89: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1168:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1169:79: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1171:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1172:86: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1176:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1177:82: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1179:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1180:89: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1182:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1183:79: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1185:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1186:86: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1188:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1189:83: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1192:9: ANN201 Missing return type annotation for public function `test_chain_date_time_lookups`
tests/lookup/tests.py:1192:9: D102 Missing docstring in public method
tests/lookup/tests.py:1193:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1197:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1201:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1205:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1210:9: ANN201 Missing return type annotation for public function `test_exact_none_transform`
tests/lookup/tests.py:1213:9: PT009 Use a regular `assert` instead of unittest-style `assertFalse`
tests/lookup/tests.py:1214:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:1215:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:1216:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:1218:9: ANN201 Missing return type annotation for public function `test_exact_sliced_queryset_limit_one`
tests/lookup/tests.py:1218:9: D102 Missing docstring in public method
tests/lookup/tests.py:1219:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1224:9: ANN201 Missing return type annotation for public function `test_exact_sliced_queryset_limit_one_offset`
tests/lookup/tests.py:1224:9: D102 Missing docstring in public method
tests/lookup/tests.py:1225:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1230:9: ANN201 Missing return type annotation for public function `test_exact_sliced_queryset_not_limited_to_one`
tests/lookup/tests.py:1230:9: D102 Missing docstring in public method
tests/lookup/tests.py:1241:9: ANN201 Missing return type annotation for public function `test_exact_booleanfield`
tests/lookup/tests.py:1241:9: D102 Missing docstring in public method
tests/lookup/tests.py:1248:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1249:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:1250:13: UP031 Use format specifiers instead of percent format
tests/lookup/tests.py:1255:9: ANN201 Missing return type annotation for public function `test_exact_booleanfield_annotation`
tests/lookup/tests.py:1255:9: D102 Missing docstring in public method
tests/lookup/tests.py:1263:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1265:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1266:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:1271:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1272:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:1277:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1278:9: PT009 Use a regular `assert` instead of unittest-style `assertNotIn`
tests/lookup/tests.py:1280:9: ANN201 Missing return type annotation for public function `test_custom_field_none_rhs`
tests/lookup/tests.py:1281:9: D205 1 blank line required between summary line and description
tests/lookup/tests.py:1281:9: D212 [*] Multi-line docstring summary should start at the first line
tests/lookup/tests.py:1286:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:1287:80: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1289:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:1291:9: ANN201 Missing return type annotation for public function `test_pattern_lookups_with_substr`
tests/lookup/tests.py:1291:9: D102 Missing docstring in public method
tests/lookup/tests.py:1305:24: UP031 Use format specifiers instead of percent format
tests/lookup/tests.py:1305:67: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1307:17: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1309:9: ANN201 Missing return type annotation for public function `test_custom_lookup_none_rhs`
tests/lookup/tests.py:1313:17: SLF001 Private member accessed: `_meta`
tests/lookup/tests.py:1314:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
tests/lookup/tests.py:1315:86: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1317:9: PT009 Use a regular `assert` instead of unittest-style `assertTrue`
tests/lookup/tests.py:1318:89: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1321:9: ANN201 Missing return type annotation for public function `test_exact_exists`
tests/lookup/tests.py:1321:9: D102 Missing docstring in public method
tests/lookup/tests.py:1326:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1328:9: ANN201 Missing return type annotation for public function `test_nested_outerref_lhs`
tests/lookup/tests.py:1328:9: D102 Missing docstring in public method
tests/lookup/tests.py:1335:80: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1337:45: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1340:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1342:9: ANN201 Missing return type annotation for public function `test_exact_query_rhs_with_selected_columns`
tests/lookup/tests.py:1342:9: D102 Missing docstring in public method
tests/lookup/tests.py:1357:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1359:9: ANN201 Missing return type annotation for public function `test_isnull_non_boolean_value`
tests/lookup/tests.py:1359:9: D102 Missing docstring in public method
tests/lookup/tests.py:1368:13: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
tests/lookup/tests.py:1372:9: ANN201 Missing return type annotation for public function `test_isnull_textfield`
tests/lookup/tests.py:1372:9: D102 Missing docstring in public method
tests/lookup/tests.py:1373:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1377:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1382:9: ANN201 Missing return type annotation for public function `test_lookup_rhs`
tests/lookup/tests.py:1382:9: D102 Missing docstring in public method
tests/lookup/tests.py:1387:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1391:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1396:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1401:9: ANN201 Missing return type annotation for public function `test_lookup_direct_value_rhs_unwrapped`
tests/lookup/tests.py:1401:9: D102 Missing docstring in public method
tests/lookup/tests.py:1403:13: PT009 Use a regular `assert` instead of unittest-style `assertIs`
tests/lookup/tests.py:1403:78: FBT003 Boolean positional value in function call
tests/lookup/tests.py:1405:9: PT009 Use a regular `assert` instead of unittest-style `assertIn`
tests/lookup/tests.py:1408:7: D101 Missing docstring in public class
tests/lookup/tests.py:1410:9: ANN206 Missing return type annotation for classmethod `setUpTestData`
tests/lookup/tests.py:1410:9: D102 Missing docstring in public method
tests/lookup/tests.py:1418:9: ANN201 Missing return type annotation for public function `test_annotate`
tests/lookup/tests.py:1418:9: D102 Missing docstring in public method
tests/lookup/tests.py:1420:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1425:9: ANN201 Missing return type annotation for public function `test_alias`
tests/lookup/tests.py:1425:9: D102 Missing docstring in public method
tests/lookup/tests.py:1427:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1429:9: ANN201 Missing return type annotation for public function `test_annotate_value_greater_than_value`
tests/lookup/tests.py:1429:9: D102 Missing docstring in public method
tests/lookup/tests.py:1431:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1436:9: ANN201 Missing return type annotation for public function `test_annotate_field_greater_than_field`
tests/lookup/tests.py:1436:9: D102 Missing docstring in public method
tests/lookup/tests.py:1438:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1443:9: ANN201 Missing return type annotation for public function `test_annotate_field_greater_than_value`
tests/lookup/tests.py:1443:9: D102 Missing docstring in public method
tests/lookup/tests.py:1445:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1450:9: ANN201 Missing return type annotation for public function `test_annotate_field_greater_than_literal`
tests/lookup/tests.py:1450:9: D102 Missing docstring in public method
tests/lookup/tests.py:1452:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1457:9: ANN201 Missing return type annotation for public function `test_annotate_literal_greater_than_field`
tests/lookup/tests.py:1457:9: D102 Missing docstring in public method
tests/lookup/tests.py:1459:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1464:9: ANN201 Missing return type annotation for public function `test_annotate_less_than_float`
tests/lookup/tests.py:1464:9: D102 Missing docstring in public method
tests/lookup/tests.py:1466:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1471:9: ANN201 Missing return type annotation for public function `test_annotate_greater_than_or_equal`
tests/lookup/tests.py:1471:9: D102 Missing docstring in public method
tests/lookup/tests.py:1473:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1478:9: ANN201 Missing return type annotation for public function `test_annotate_greater_than_or_equal_float`
tests/lookup/tests.py:1478:9: D102 Missing docstring in public method
tests/lookup/tests.py:1480:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1485:9: ANN201 Missing return type annotation for public function `test_combined_lookups`
tests/lookup/tests.py:1485:9: D102 Missing docstring in public method
tests/lookup/tests.py:1488:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1493:9: ANN201 Missing return type annotation for public function `test_lookup_in_filter`
tests/lookup/tests.py:1493:9: D102 Missing docstring in public method
tests/lookup/tests.py:1495:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1497:9: ANN201 Missing return type annotation for public function `test_isnull_lookup_in_filter`
tests/lookup/tests.py:1497:9: D102 Missing docstring in public method
tests/lookup/tests.py:1498:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1499:66: FBT003 Boolean positional value in function call
tests/lookup/tests.py:1502:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1503:66: FBT003 Boolean positional value in function call
tests/lookup/tests.py:1507:9: ANN201 Missing return type annotation for public function `test_filter_lookup_lhs`
tests/lookup/tests.py:1507:9: D102 Missing docstring in public method
tests/lookup/tests.py:1511:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1513:9: ANN201 Missing return type annotation for public function `test_filter_wrapped_lookup_lhs`
tests/lookup/tests.py:1513:9: D102 Missing docstring in public method
tests/lookup/tests.py:1519:18: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1524:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1526:9: ANN201 Missing return type annotation for public function `test_filter_exists_lhs`
tests/lookup/tests.py:1526:9: D102 Missing docstring in public method
tests/lookup/tests.py:1530:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1532:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1534:9: ANN201 Missing return type annotation for public function `test_filter_subquery_lhs`
tests/lookup/tests.py:1534:9: D102 Missing docstring in public method
tests/lookup/tests.py:1540:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1542:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1544:9: ANN201 Missing return type annotation for public function `test_combined_lookups_in_filter`
tests/lookup/tests.py:1544:9: D102 Missing docstring in public method
tests/lookup/tests.py:1547:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1549:9: ANN201 Missing return type annotation for public function `test_combined_annotated_lookups_in_filter`
tests/lookup/tests.py:1549:9: D102 Missing docstring in public method
tests/lookup/tests.py:1552:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1554:9: ANN201 Missing return type annotation for public function `test_combined_annotated_lookups_in_filter_false`
tests/lookup/tests.py:1554:9: D102 Missing docstring in public method
tests/lookup/tests.py:1557:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1559:9: ANN201 Missing return type annotation for public function `test_lookup_in_order_by`
tests/lookup/tests.py:1559:9: D102 Missing docstring in public method
tests/lookup/tests.py:1561:9: PT009 Use a regular `assert` instead of unittest-style `assertSequenceEqual`
tests/lookup/tests.py:1563:9: ANN201 Missing return type annotation for public function `test_aggregate_combined_lookup`
tests/lookup/tests.py:1563:9: D102 Missing docstring in public method
tests/lookup/tests.py:1566:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1568:9: ANN201 Missing return type annotation for public function `test_conditional_expression`
tests/lookup/tests.py:1568:9: D102 Missing docstring in public method
tests/lookup/tests.py:1576:14: COM812 [*] Trailing comma missing
tests/lookup/tests.py:1578:9: PT009 Use a regular `assert` instead of unittest-style `assertCountEqual`
tests/lookup/tests.py:1587:9: ANN201 Missing return type annotation for public function `test_multivalued_join_reuse`
tests/lookup/tests.py:1587:9: D102 Missing docstring in public method
tests/lookup/tests.py:1588:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1592:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1596:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
tests/lookup/tests.py:1598:82: COM812 [*] Trailing comma missing
